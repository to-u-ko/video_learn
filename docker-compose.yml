version: "3.9"

services:
  django:
    build: ./Docker/Django
    command: >
      bash -c "
        python3 manage.py collectstatic --noinput
        celery -A project worker -l info --concurrency=1 &
        uwsgi --socket :8000 --module project.wsgi --py-autoreload 1 --logto /tmp/mylog.log
        "
    volumes:
      - ./src:/code
      - ./static:/static
    expose:
      - "8000"
    env_file:
      - openai_api.env
    depends_on:
      db:
        # dbのヘルスチェックが終わってからappを起動させる
        condition: service_healthy
      redis:
        # redisのヘルスチェックが終わってからappを起動させる
        condition: service_healthy

  db:
    image: mysql:8.0
    platform: linux/amd64
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: chapter
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      TZ: "Asia/Tokyo"
    volumes:
      - ./mysql:/var/lib/mysql
      - ./sql:/docker-entrypoint-initdb.d
    # DBのコンテナのヘルスチェックを行う
    # mysqladmin(MySQLサーバーの管理を行うクライアントを使ってDBコンテナ自身(127.0.0.1)にpingを送ってヘルスチェックを行う
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u$$MYSQL_USER -p$$MYSQL_PASSWORD
      # ヘルスチェックのインターバルは10秒
      interval: 10s
      # タイムアウト時間は10秒
      timeout: 10s
      # リトライ回数は3回
      retries: 3
      # ヘルスチェックが失敗しても無視する時間は60秒
      start_period: 60s

  nginx:
    image: nginx:1.24.0
    ports:
      - "80:80"
    volumes:
      - ./Docker/Nginx/conf:/etc/nginx/conf.d
      - ./Docker/Nginx/uwsgi_params:/etc/nginx/uwsgi_params
      - ./static:/static
    depends_on:
      - django

  redis:
    image: redis:latest
    ports:
      - 6379:6379
    tty: true
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "localhost", "ping"]
      interval: 10s
      timeout: 10s
      # ヘルスチェックが失敗しても無視する時間は30秒
      start_period: 30s

  # celery:
  #   build: ./Docker/Django
  #   tty: true
  #   command: celery -A project worker -l info --concurrency=1
  #   volumes:
  #     - ./src:/code
  #   env_file:
  #     - openai_api.env
  #   depends_on:
  #     - django
  #     - redis

